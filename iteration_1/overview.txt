GUI_Window and GUI_RenderTexture both contains VBO, VAO and EBO for each item that is drawn onto itself.

struct GUI_Branch_Common {
    unsigned int        id;
    UI_Unit_Type        type;
    Rectangle           rect;
    Color               color;
    void*               data;
    unsigned int*       child_units;
    unsigned int*       parent_units;
    unsigned short      child_units_size;
    unsigned short      parent_units_size;
    bool                visible;
};
 

// NOW THE UBER SHADER IS MOSTLY DONE. THE ONLY CHANGES LEFT IS TO MAKE UINT TEX_INDEX INTO THIS:
//     TEX_INDEX   FREE     FREE     FREE
// UINT xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx

GOALS

1:
Every item knows its place in the VBO and when it is changed, it automatically updates the VBO

2:
MAKE THE TARGET ITEMS (WINDOW AND RENDER_TEXTURE) HAVE THEIR OWN EBO.
FOR EVERY FRAME YOU CAN RESET THE EBO. YOU SHOULD THEN APPEND EVERY ITEM YOU WANT TO BE DRAWN TO THE EBO.

3: 
Every target needs to have its own mouse position and internal rect offset so that the less is needed to be updated
on the VBO. if you dont have a rect offset you would have to reset the pos to every letter in the VBO

fktksk
